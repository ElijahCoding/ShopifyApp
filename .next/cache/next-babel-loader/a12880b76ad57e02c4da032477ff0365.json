{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagDelete($id: ID!) {\\n        scriptTagDelete(id: $id) {\\n            deletedScriptTagId\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        scriptTags(first: 5) {\\n            edges {\\n                node {\\n                    id\\n                    src\\n                    displayScope\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagCreate($input: ScriptTagInput!) {\\n        scriptTagCreate(input: $input) {\\n            scriptTag {\\n                id\\n            }\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar QUERY_SCRIPTTAGS = gql(_templateObject2());\nvar DELETE_SCRIPTTAG = gql(_templateObject3());\n\nfunction ScriptPage() {\n  _s();\n\n  var _useMutation = useMutation(CREATE_SCRIPT_TAG),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createScripts = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_SCRIPTTAG),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteScripts = _useMutation4[0];\n\n  var _useQuery = useQuery(QUERY_SCRIPTTAGS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n  if (error) return __jsx(\"div\", null, error.message);\n  return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"These are the Script Tags:\",\n    sectioned: true\n  }))));\n}\n\n_s(ScriptPage, \"vEez66HRLTXVYhV5eSzb2nSu0zc=\", false, function () {\n  return [useMutation, useMutation, useQuery];\n});\n\n_c = ScriptPage;\n;\nexport default ScriptPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScriptPage\");","map":{"version":3,"sources":["/Users/elijah/Desktop/Projects/ShopifyApp/pages/script-page.js"],"names":["gql","useQuery","useMutation","CREATE_SCRIPT_TAG","QUERY_SCRIPTTAGS","DELETE_SCRIPTTAG","ScriptPage","createScripts","deleteScripts","loading","error","data","message"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,qBAApC;AAEA,IAAMC,iBAAiB,GAAGH,GAAH,mBAAvB;AAcA,IAAMI,gBAAgB,GAAGJ,GAAH,oBAAtB;AAcA,IAAMK,gBAAgB,GAAGL,GAAH,oBAAtB;;AAcA,SAASM,UAAT,GAAsB;AAAA;;AAAA,qBACMJ,WAAW,CAACC,iBAAD,CADjB;AAAA;AAAA,MACXI,aADW;;AAAA,sBAEML,WAAW,CAACG,gBAAD,CAFjB;AAAA;AAAA,MAEXG,aAFW;;AAAA,kBAGaP,QAAQ,CAACG,gBAAD,CAHrB;AAAA,MAGXK,OAHW,aAGXA,OAHW;AAAA,MAGFC,KAHE,aAGFA,KAHE;AAAA,MAGKC,IAHL,aAGKA,IAHL;;AAKlB,MAAIF,OAAJ,EAAa,OAAO,mCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEX,SACI,MAAC,IAAD,QACI,MAAC,MAAD,QACI,MAAC,MAAD,CAAQ,OAAR,QACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,4BAAZ;AAAyC,IAAA,SAAS;AAAlD,IADJ,CADJ,CADJ,CADJ;AAWH;;GAnBQN,U;UACmBJ,W,EACAA,W,EACOD,Q;;;KAH1BK,U;AAmBR;AAED,eAAeA,UAAf","sourcesContent":["import gql from 'graphql-tag';\nimport {useQuery, useMutation} from \"@apollo/react-hooks\";\n\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input: ScriptTagInput!) {\n        scriptTagCreate(input: $input) {\n            scriptTag {\n                id\n            }\n            userErrors {\n                field\n                message\n            }\n        }\n    }\n`;\n\nconst QUERY_SCRIPTTAGS = gql`\n    query {\n        scriptTags(first: 5) {\n            edges {\n                node {\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`;\n\nconst DELETE_SCRIPTTAG = gql`\n    mutation scriptTagDelete($id: ID!) {\n        scriptTagDelete(id: $id) {\n            deletedScriptTagId\n            userErrors {\n                field\n                message\n            }\n        }\n    }\n`;\n\n\n\nfunction ScriptPage() {\n    const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\n    const [deleteScripts] = useMutation(DELETE_SCRIPTTAG);\n    const {loading, error, data} = useQuery(QUERY_SCRIPTTAGS);\n\n    if (loading) return <div>Loadingâ€¦</div>;\n    if (error) return <div>{error.message}</div>;\n\n    return (\n        <Page>\n            <Layout>\n                <Layout.Section>\n                    <Card title=\"These are the Script Tags:\" sectioned>\n                        \n                    </Card>\n                </Layout.Section>\n            </Layout>\n        </Page>\n    )\n};\n\nexport default ScriptPage;"]},"metadata":{},"sourceType":"module"}