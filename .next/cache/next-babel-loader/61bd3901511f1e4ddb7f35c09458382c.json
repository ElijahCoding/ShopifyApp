{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input: ScriptTagInput!) {\n        scriptTagCreate(input: $input) {\n            scriptTag {\n                id\n            }\n            userErrors {\n                field\n                message\n            }\n        }\n    }\n`;\nconst QUERY_SCRIPTTAGS = gql`\n    query {\n        scriptTags(first: 5) {\n            edges {\n                node {\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`;\nconst DELETE_SCRIPTTAG = gql`\n    mutation scriptTagDelete($id: ID!) {\n        scriptTagDelete(id: $id) {\n            deletedScriptTagId\n            userErrors {\n                field\n                message\n            }\n        }\n    }\n`;\n\nfunction ScriptPage() {\n  const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\n  const [deleteScripts] = useMutation(DELETE_SCRIPTTAG);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY_SCRIPTTAGS);\n  if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n  if (error) return __jsx(\"div\", null, error.message);\n  return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"These are the Script Tags:\",\n    sectioned: true\n  }))));\n}\n\n;\nexport default ScriptPage;","map":{"version":3,"sources":["/Users/elijah/Desktop/Projects/ShopifyApp/pages/script-page.js"],"names":["gql","useQuery","useMutation","CREATE_SCRIPT_TAG","QUERY_SCRIPTTAGS","DELETE_SCRIPTTAG","ScriptPage","createScripts","deleteScripts","loading","error","data","message"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,qBAApC;AAEA,MAAMC,iBAAiB,GAAGH,GAAI;;;;;;;;;;;;CAA9B;AAcA,MAAMI,gBAAgB,GAAGJ,GAAI;;;;;;;;;;;;CAA7B;AAcA,MAAMK,gBAAgB,GAAGL,GAAI;;;;;;;;;;CAA7B;;AAcA,SAASM,UAAT,GAAsB;AAClB,QAAM,CAACC,aAAD,IAAkBL,WAAW,CAACC,iBAAD,CAAnC;AACA,QAAM,CAACK,aAAD,IAAkBN,WAAW,CAACG,gBAAD,CAAnC;AACA,QAAM;AAACI,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBV,QAAQ,CAACG,gBAAD,CAAvC;AAEA,MAAIK,OAAJ,EAAa,OAAO,mCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEX,SACI,MAAC,IAAD,QACI,MAAC,MAAD,QACI,MAAC,MAAD,CAAQ,OAAR,QACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,4BAAZ;AAAyC,IAAA,SAAS;AAAlD,IADJ,CADJ,CADJ,CADJ;AAYH;;AAAA;AAED,eAAeN,UAAf","sourcesContent":["import gql from 'graphql-tag';\nimport {useQuery, useMutation} from \"@apollo/react-hooks\";\n\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input: ScriptTagInput!) {\n        scriptTagCreate(input: $input) {\n            scriptTag {\n                id\n            }\n            userErrors {\n                field\n                message\n            }\n        }\n    }\n`;\n\nconst QUERY_SCRIPTTAGS = gql`\n    query {\n        scriptTags(first: 5) {\n            edges {\n                node {\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`;\n\nconst DELETE_SCRIPTTAG = gql`\n    mutation scriptTagDelete($id: ID!) {\n        scriptTagDelete(id: $id) {\n            deletedScriptTagId\n            userErrors {\n                field\n                message\n            }\n        }\n    }\n`;\n\n\n\nfunction ScriptPage() {\n    const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\n    const [deleteScripts] = useMutation(DELETE_SCRIPTTAG);\n    const {loading, error, data} = useQuery(QUERY_SCRIPTTAGS);\n\n    if (loading) return <div>Loadingâ€¦</div>;\n    if (error) return <div>{error.message}</div>;\n\n    return (\n        <Page>\n            <Layout>\n                <Layout.Section>\n                    <Card title=\"These are the Script Tags:\" sectioned>\n\n                    </Card>\n                </Layout.Section>\n                \n            </Layout>\n        </Page>\n    )\n};\n\nexport default ScriptPage;"]},"metadata":{},"sourceType":"module"}