{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagDelete($id: ID!) {\\n        scriptTagDelete(id: $id) {\\n            deletedScriptTagId\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        scriptTags(first: 5) {\\n            edges {\\n                node {\\n                    id\\n                    src\\n                    displayScope\\n                }\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation scriptTagCreate($input: ScriptTagInput!) {\\n        scriptTagCreate(input: $input) {\\n            scriptTag {\\n                id\\n            }\\n            userErrors {\\n                field\\n                message\\n            }\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nvar CREATE_SCRIPT_TAG = gql(_templateObject());\nvar QUERY_SCRIPTTAGS = gql(_templateObject2());\nvar DELETE_SCRIPTTAG = gql(_templateObject3());\n\nfunction ScriptPage() {\n  _s();\n\n  var _useMutation = useMutation(CREATE_SCRIPT_TAG),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      createScripts = _useMutation2[0];\n\n  var _useMutation3 = useMutation(DELETE_SCRIPTTAG),\n      _useMutation4 = _slicedToArray(_useMutation3, 1),\n      deleteScripts = _useMutation4[0];\n\n  var _useQuery = useQuery(QUERY_SCRIPTTAGS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n  if (error) return __jsx(\"div\", null, error.message);\n  return __jsx(Page, null, __jsx(Layout, null, __jsx(Layout.Section, null, __jsx(Card, {\n    title: \"These are the Script Tags:\",\n    sectioned: true\n  }, __jsx(\"p\", null, \"Create or Delete a Script Tag\"))), __jsx(Layout.Section, {\n    secondary: true\n  }, __jsx(Card, {\n    title: \"Delete Tag\",\n    sectioned: true\n  }, __jsx(Button, {\n    primary: true,\n    size: \"slim\",\n    type: \"submit\",\n    onClick: function onClick() {\n      createScripts({\n        variables: {\n          input: {\n            src: \"https://d733e9bf.ngrok.io/test-script.js\",\n            displayScope: \"ALL\"\n          }\n        },\n        refetchQueries: [{\n          query: QUERY_SCRIPTTAGS\n        }]\n      });\n    }\n  }, \"Create Script Tag\"))), __jsx(Layout.Section, null, __jsx(Card, null, __jsx(ResourceList, {\n    showHeader: true,\n    resourceName: {\n      singular: 'Script',\n      plural: 'Scripts'\n    },\n    items: data.scriptTags.edges,\n    renderItem: function renderItem(item) {\n      return __jsx(ResourceList.Item, {\n        id: item.id\n      }, __jsx(Stack, null, __jsx(Stack.Item, null, __jsx(\"p\", null, item.node.id)), __jsx(Stack.Item, null, __jsx(Button, {\n        type: \"submit\",\n        onClick: function onClick() {\n          deleteScripts({\n            variables: {\n              id: item.node.id\n            },\n            refetchQueries: [{\n              query: QUERY_SCRIPTTAGS\n            }]\n          });\n        }\n      }, \"Delete Script Tag\"))));\n    }\n  })))));\n}\n\n_s(ScriptPage, \"vEez66HRLTXVYhV5eSzb2nSu0zc=\", false, function () {\n  return [useMutation, useMutation, useQuery];\n});\n\n_c = ScriptPage;\nexport default ScriptPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScriptPage\");","map":{"version":3,"sources":["/Users/elijah/Desktop/Projects/ShopifyApp/pages/script-page.js"],"names":["gql","useQuery","useMutation","CREATE_SCRIPT_TAG","QUERY_SCRIPTTAGS","DELETE_SCRIPTTAG","ScriptPage","createScripts","deleteScripts","loading","error","data","message","variables","input","src","displayScope","refetchQueries","query","singular","plural","scriptTags","edges","item","id","node"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAAQC,QAAR,EAAkBC,WAAlB,QAAoC,qBAApC;AAEA,IAAMC,iBAAiB,GAAGH,GAAH,mBAAvB;AAcA,IAAMI,gBAAgB,GAAGJ,GAAH,oBAAtB;AAcA,IAAMK,gBAAgB,GAAGL,GAAH,oBAAtB;;AAaA,SAASM,UAAT,GAAsB;AAAA;;AAAA,qBACMJ,WAAW,CAACC,iBAAD,CADjB;AAAA;AAAA,MACXI,aADW;;AAAA,sBAEML,WAAW,CAACG,gBAAD,CAFjB;AAAA;AAAA,MAEXG,aAFW;;AAAA,kBAGaP,QAAQ,CAACG,gBAAD,CAHrB;AAAA,MAGXK,OAHW,aAGXA,OAHW;AAAA,MAGFC,KAHE,aAGFA,KAHE;AAAA,MAGKC,IAHL,aAGKA,IAHL;;AAKlB,MAAIF,OAAJ,EAAa,OAAO,mCAAP;AACb,MAAIC,KAAJ,EAAW,OAAO,mBAAMA,KAAK,CAACE,OAAZ,CAAP;AAEX,SACI,MAAC,IAAD,QACI,MAAC,MAAD,QACI,MAAC,MAAD,CAAQ,OAAR,QACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,4BAAZ;AAAyC,IAAA,SAAS;AAAlD,KACI,iDADJ,CADJ,CADJ,EAQI,MAAC,MAAD,CAAQ,OAAR;AAAgB,IAAA,SAAS;AAAzB,KACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAC,YAAZ;AAAyB,IAAA,SAAS;AAAlC,KACI,MAAC,MAAD;AACI,IAAA,OAAO,MADX;AAEI,IAAA,IAAI,EAAC,MAFT;AAGI,IAAA,IAAI,EAAC,QAHT;AAGkB,IAAA,OAAO,EAAE,mBAAM;AAC7BL,MAAAA,aAAa,CAAC;AACVM,QAAAA,SAAS,EAAE;AACPC,UAAAA,KAAK,EAAE;AACHC,YAAAA,GAAG,EAAE,0CADF;AAEHC,YAAAA,YAAY,EAAE;AAFX;AADA,SADD;AAOVC,QAAAA,cAAc,EAAE,CAAC;AAACC,UAAAA,KAAK,EAAEd;AAAR,SAAD;AAPN,OAAD,CAAb;AASH;AAbD,yBADJ,CADJ,CARJ,EA6BI,MAAC,MAAD,CAAQ,OAAR,QACI,MAAC,IAAD,QACI,MAAC,YAAD;AACI,IAAA,UAAU,MADd;AAEI,IAAA,YAAY,EAAE;AAACe,MAAAA,QAAQ,EAAE,QAAX;AAAqBC,MAAAA,MAAM,EAAE;AAA7B,KAFlB;AAGI,IAAA,KAAK,EAAET,IAAI,CAACU,UAAL,CAAgBC,KAH3B;AAII,IAAA,UAAU,EAAE,oBAAAC,IAAI,EAAI;AAChB,aACI,MAAC,YAAD,CAAc,IAAd;AACI,QAAA,EAAE,EAAEA,IAAI,CAACC;AADb,SAGI,MAAC,KAAD,QACI,MAAC,KAAD,CAAO,IAAP,QACI,iBACKD,IAAI,CAACE,IAAL,CAAUD,EADf,CADJ,CADJ,EAMI,MAAC,KAAD,CAAO,IAAP,QACI,MAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,mBAAM;AACjChB,UAAAA,aAAa,CAAC;AACVK,YAAAA,SAAS,EAAE;AACPW,cAAAA,EAAE,EAAED,IAAI,CAACE,IAAL,CAAUD;AADP,aADD;AAIVP,YAAAA,cAAc,EAAE,CAAC;AAACC,cAAAA,KAAK,EAAEd;AAAR,aAAD;AAJN,WAAD,CAAb;AAMH;AAPD,6BADJ,CANJ,CAHJ,CADJ;AAyBH;AA9BL,IADJ,CADJ,CA7BJ,CADJ,CADJ;AAsEH;;GA9EQE,U;UACmBJ,W,EACAA,W,EACOD,Q;;;KAH1BK,U;AAgFT,eAAeA,UAAf","sourcesContent":["import gql from 'graphql-tag';\nimport {useQuery, useMutation} from \"@apollo/react-hooks\";\n\nconst CREATE_SCRIPT_TAG = gql`\n    mutation scriptTagCreate($input: ScriptTagInput!) {\n        scriptTagCreate(input: $input) {\n            scriptTag {\n                id\n            }\n            userErrors {\n                field\n                message\n            }\n        }\n    }\n`;\n\nconst QUERY_SCRIPTTAGS = gql`\n    query {\n        scriptTags(first: 5) {\n            edges {\n                node {\n                    id\n                    src\n                    displayScope\n                }\n            }\n        }\n    }\n`;\n\nconst DELETE_SCRIPTTAG = gql`\n    mutation scriptTagDelete($id: ID!) {\n        scriptTagDelete(id: $id) {\n            deletedScriptTagId\n            userErrors {\n                field\n                message\n            }\n        }\n    }\n`;\n\n\nfunction ScriptPage() {\n    const [createScripts] = useMutation(CREATE_SCRIPT_TAG);\n    const [deleteScripts] = useMutation(DELETE_SCRIPTTAG);\n    const {loading, error, data} = useQuery(QUERY_SCRIPTTAGS);\n\n    if (loading) return <div>Loadingâ€¦</div>;\n    if (error) return <div>{error.message}</div>;\n\n    return (\n        <Page>\n            <Layout>\n                <Layout.Section>\n                    <Card title=\"These are the Script Tags:\" sectioned>\n                        <p>\n                            Create or Delete a Script Tag\n                        </p>\n                    </Card>\n                </Layout.Section>\n                <Layout.Section secondary>\n                    <Card title=\"Delete Tag\" sectioned>\n                        <Button\n                            primary\n                            size=\"slim\"\n                            type=\"submit\" onClick={() => {\n                            createScripts({\n                                variables: {\n                                    input: {\n                                        src: \"https://d733e9bf.ngrok.io/test-script.js\",\n                                        displayScope: \"ALL\"\n                                    }\n                                },\n                                refetchQueries: [{query: QUERY_SCRIPTTAGS}]\n                            })\n                        }}\n                        >\n                            Create Script Tag\n                        </Button>\n                    </Card>\n                </Layout.Section>\n                <Layout.Section>\n                    <Card>\n                        <ResourceList\n                            showHeader\n                            resourceName={{singular: 'Script', plural: 'Scripts'}}\n                            items={data.scriptTags.edges}\n                            renderItem={item => {\n                                return (\n                                    <ResourceList.Item\n                                        id={item.id}\n                                    >\n                                        <Stack>\n                                            <Stack.Item>\n                                                <p>\n                                                    {item.node.id}\n                                                </p>\n                                            </Stack.Item>\n                                            <Stack.Item>\n                                                <Button type='submit' onClick={() => {\n                                                    deleteScripts({\n                                                        variables: {\n                                                            id: item.node.id\n                                                        },\n                                                        refetchQueries: [{query: QUERY_SCRIPTTAGS}]\n                                                    })\n                                                }}>\n                                                    Delete Script Tag\n                                                </Button>\n                                            </Stack.Item>\n                                        </Stack>\n                                    </ResourceList.Item>\n                                )\n                            }}\n                        />\n                    </Card>\n                </Layout.Section>\n            </Layout>\n        </Page>\n    )\n}\n\nexport default ScriptPage;"]},"metadata":{},"sourceType":"module"}